{"version":3,"sources":["shared/hooks/formHook.js","shared/components/FormElements/Input.module.scss","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","shared/hooks/toastHook.js","shared/api/cancelableReq.js","shared/api/urls.js","../node_modules/regenerator-runtime/runtime.js","shared/util/validators.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","shared/components/FormElements/Input.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js"],"names":["formReducer","state","action","type","formIsValid","inputId","inputs","isValid","value","useForm","initialInputs","initialValidity","useReducer","formState","dispatch","useCallback","id","inputData","formValidity","module","exports","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","useToastContext","useContext","ToastContext","cancelableReq","asyncFn","source","CancelToken","config","cancelToken","token","promise","cancel","apiUrl","LOGIN","SIGN_UP","USERS","PLACES","USER_PLACES","runtime","Op","Object","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","method","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","makeInvokeMethod","obj","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","invoke","result","__await","unwrapped","TypeError","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","constructor","displayName","isGeneratorFunction","genFun","ctor","name","mark","setPrototypeOf","__proto__","awrap","async","iter","toString","keys","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","Function","VALIDATOR_REQUIRE","VALIDATOR_MINLENGTH","val","VALIDATOR_EMAIL","validate","validators","o","Array","isArray","unsupportedIterableToArray","F","s","n","e","_e","f","it","normalCompletion","didErr","step","_e2","validator","trim","test","inputReducer","isTouched","Input","el","label","rows","errorText","onInput","initValue","initValid","className","inputClass","inputProps","inputState","useEffect","changeHandler","target","touchHandler","element","onChange","onBlur","cx","formControl","formControlInvalid","htmlFor","ownKeys","enumerableOnly","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","_objectSpread2","getOwnPropertyDescriptors","defineProperties","defineProperty"],"mappings":"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","file":"static/js/0.7400ffe3.chunk.js","sourcesContent":["import { useReducer, useCallback } from 'react';\n\nconst formReducer = (state, action) => {\n  switch (action.type) {\n    case 'INPUT_CHANGE':\n      let formIsValid = true;\n\n      for (const inputId in state.inputs) {\n        if (!state.inputs[inputId]) {\n          continue;\n        }\n        if (inputId === action.inputId) {\n          formIsValid = formIsValid && action.isValid;\n        } else {\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\n        }\n      }\n\n      return {\n        ...state,\n        inputs: {\n          ...state.inputs,\n          [action.inputId]: {\n            value: action.value,\n            isValid: action.isValid,\n          },\n        },\n\n        isValid: formIsValid,\n      };\n\n    case 'SET_DATA':\n      return {\n        inputs: action.inputs,\n        isValid: action.formIsValid,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const useForm = (initialInputs, initialValidity) => {\n  const [formState, dispatch] = useReducer(formReducer, {\n    inputs: initialInputs,\n    isValid: initialValidity,\n  });\n\n  const inputHandler = useCallback((id, value, isValid) => {\n    dispatch({ type: 'INPUT_CHANGE', inputId: id, value, isValid });\n  }, []);\n\n  const setFormData = useCallback((inputData, formValidity) => {\n    dispatch({\n      type: 'SET_DATA',\n      inputs: inputData,\n      formIsValid: formValidity,\n    });\n  }, []);\n\n  return [formState, inputHandler, setFormData];\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"Input_formControl__20HWx\",\"formControlInvalid\":\"Input_formControlInvalid__u0TQM\"};","module.exports = require(\"regenerator-runtime\");\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import { useContext } from 'react';\nimport { ToastContext } from '../context/toastContext';\n\nexport const useToastContext = () => {\n  return useContext(ToastContext);\n};\n","import { CancelToken } from 'axios';\n\nexport const cancelableReq = (asyncFn) => (...args) => {\n  const source = CancelToken.source();\n  const config = {\n    cancelToken: source.token,\n  };\n\n  const promise = asyncFn(...args, config);\n\n  promise.cancel = () => {\n    source.cancel('Query was cancelled');\n  };\n\n  return promise;\n};\n","export const apiUrl = {\n  LOGIN: '/api/users/login',\n  SIGN_UP: '/api/users/signup',\n  USERS: '/api/users',\n  PLACES: '/api/places',\n  USER_PLACES: '/api/places/user',\n};\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n","import unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o) {\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (o = unsupportedIterableToArray(o))) {\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var it,\n      normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import cx from 'classnames';\nimport React, { useReducer, useEffect } from 'react';\nimport { validate } from '../../util/validators';\nimport s from './Input.module.scss';\n\nconst inputReducer = (state, action) => {\n  switch (action.type) {\n    case 'CHANGE':\n      return {\n        ...state,\n        value: action.val,\n        isValid: validate(action.val, action.validators),\n      };\n\n    case 'TOUCH':\n      return {\n        ...state,\n        isTouched: true,\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst Input = ({\n  el,\n  id,\n  label,\n  rows,\n  errorText,\n  validators,\n  onInput,\n  initValue,\n  initValid,\n  inputClass,\n  className,\n  ...inputProps\n}) => {\n  const [inputState, dispatch] = useReducer(inputReducer, {\n    value: initValue || '',\n    isTouched: false,\n    isValid: initValid || false,\n  });\n\n  const { value, isValid } = inputState;\n\n  useEffect(() => {\n    onInput(id, value, isValid);\n  }, [id, value, isValid, onInput]);\n\n  const changeHandler = (e) => {\n    dispatch({\n      type: 'CHANGE',\n      val: e.target.value,\n      validators,\n    });\n  };\n\n  const touchHandler = () => {\n    dispatch({\n      type: 'TOUCH',\n    });\n  };\n\n  const element =\n    el === 'input' ? (\n      <input\n        id={id}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n        {...inputProps}\n      />\n    ) : (\n      <textarea\n        id={id}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n        rows={rows || 3}\n        {...inputProps}\n      />\n    );\n\n  return (\n    <div\n      className={cx(s.formControl, [className], {\n        [s.formControlInvalid]:\n          !inputState.isValid && inputState.isTouched,\n      })}\n    >\n      <label htmlFor={id}>{label}</label>\n      {element}\n      {!inputState.isValid && inputState.isTouched && (\n        <p>{errorText}</p>\n      )}\n    </div>\n  );\n};\n\nexport default Input;\n","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}"],"sourceRoot":""}