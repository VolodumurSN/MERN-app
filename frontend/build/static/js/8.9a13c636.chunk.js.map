{"version":3,"sources":["places/scenes/PlaceForm.module.scss","places/scenes/UpdatePlace.js","shared/components/UIElements/Card.js","shared/components/UIElements/Card.module.scss","shared/api/hooks/placesHook.js"],"names":["module","exports","UpdatePlace","placeId","useParams","addToast","useToastContext","usePlaceById","getPlaceData","getLoading","getErrorStatus","useUpdatePlace","sendUpdatePlace","updPlaceData","updLoading","updSuccess","useForm","title","value","isValid","description","formState","inputHandler","useEffect","message","submitUpdateHandler","e","a","preventDefault","id","body","inputs","center","place","className","s","placeForm","onSubmit","asOverlay","el","type","label","errorText","validators","VALIDATOR_REQUIRE","onInput","initValue","initValid","VALIDATOR_MINLENGTH","size","disabled","Card","style","children","cx","card","getPlacesById","cancelableReq","_","config","axios","get","apiUrl","USER_PLACES","data","getPlaceById","PLACES","createPlaceReq","post","deletePlaceReq","delete","updatePlaceReq","patch","usePlacesById","useQuery","isLoading","error","response","status","useCreatePlace","useMutation","mutate","isSuccess","useDeletePlace","userId","onMutate","queryCache","cancelQueries","setQueryData","prev","places","filter","p","onSettled","invalidateQueries","onSuccess"],"mappings":"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","file":"static/js/8.9a13c636.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"placeForm\":\"PlaceForm_placeForm__xrtE_\",\"row\":\"PlaceForm_row__3-534\",\"placeTitle\":\"PlaceForm_placeTitle__UAQGO\"};","import React, { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport {\n  usePlaceById,\n  useUpdatePlace,\n} from '../../shared/api/hooks/placesHook';\nimport Button from '../../shared/components/FormElements/Button';\nimport Input from '../../shared/components/FormElements/Input';\nimport Card from '../../shared/components/UIElements/Card';\nimport Spinner from '../../shared/components/UIElements/Spinner';\nimport { useForm } from '../../shared/hooks/formHook';\nimport { useToastContext } from '../../shared/hooks/toastHook';\nimport {\n  VALIDATOR_REQUIRE,\n  VALIDATOR_MINLENGTH,\n} from '../../shared/util/validators';\nimport s from './PlaceForm.module.scss';\n\nconst UpdatePlace = () => {\n  const { placeId } = useParams();\n  const { addToast } = useToastContext();\n\n  const [getPlaceData, getLoading, getErrorStatus] = usePlaceById(\n    placeId,\n  );\n  const [\n    sendUpdatePlace,\n    updPlaceData,\n    updLoading,\n    updSuccess,\n  ] = useUpdatePlace();\n\n  const [formState, inputHandler] = useForm(\n    {\n      title: {\n        value: '',\n        isValid: false,\n      },\n\n      description: {\n        value: '',\n        isValid: false,\n      },\n    },\n    false,\n  );\n\n  useEffect(() => {\n    if (updSuccess) {\n      addToast('success', updPlaceData.message);\n    }\n  }, [updSuccess, updPlaceData]);\n\n  const submitUpdateHandler = async (e) => {\n    e.preventDefault();\n\n    await sendUpdatePlace({\n      id: placeId,\n      body: {\n        title: formState.inputs.title.value,\n        description: formState.inputs.description.value,\n      },\n    });\n  };\n\n  if (getErrorStatus === 404) {\n    return (\n      <Card center>\n        <h2>Could not find place!</h2>\n      </Card>\n    );\n  }\n\n  if (getLoading) {\n    return <Spinner center />;\n  }\n\n  return (\n    <>\n      {getPlaceData?.place && (\n        <form className={s.placeForm} onSubmit={submitUpdateHandler}>\n          {(updLoading || getLoading) && <Spinner asOverlay />}\n\n          <Input\n            id=\"title\"\n            el=\"input\"\n            type=\"text\"\n            label=\"Title\"\n            errorText=\"Please enter a valid name.\"\n            validators={[VALIDATOR_REQUIRE()]}\n            onInput={inputHandler}\n            initValue={getPlaceData.place.title}\n            initValid={true}\n          />\n\n          <Input\n            id=\"description\"\n            el=\"textarea\"\n            label=\"Description\"\n            errorText=\"Please enter a valid description (at least 5 characters).\"\n            validators={[VALIDATOR_MINLENGTH(5)]}\n            onInput={inputHandler}\n            initValue={getPlaceData.place.description}\n            initValid={true}\n          />\n\n          <Button\n            size=\"big\"\n            type=\"submit\"\n            disabled={!formState.isValid}\n          >\n            UPDATE PLACE\n          </Button>\n        </form>\n      )}\n    </>\n  );\n};\n\nexport default UpdatePlace;\n","import cx from 'classnames';\nimport React from 'react';\nimport s from './Card.module.scss';\n\nconst Card = ({ center, className, style, children }) => {\n  const el = (\n    <div className={cx(s.card, className)} style={style}>\n      {children}\n    </div>\n  );\n\n  if (center) return <div className={s.center}>{el}</div>;\n\n  return el;\n};\n\nexport default Card;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__3G_du\",\"center\":\"Card_center__2XfKQ\"};","import axios from 'axios';\nimport { useQuery, useMutation, queryCache } from 'react-query';\nimport { cancelableReq } from '../cancelableReq';\nimport { apiUrl } from '../urls';\n\nconst getPlacesById = cancelableReq(async (_, id, config) => {\n  const { data } = await axios.get(\n    `${apiUrl.USER_PLACES}/${id}`,\n    config,\n  );\n\n  return data;\n});\n\nconst getPlaceById = cancelableReq(async (_, id, config) => {\n  const { data } = await axios.get(`${apiUrl.PLACES}/${id}`, config);\n\n  return data;\n});\n\nconst createPlaceReq = cancelableReq(async (body, config) => {\n  const { data } = await axios.post(apiUrl.PLACES, body, config);\n\n  return data;\n});\n\nconst deletePlaceReq = cancelableReq(async (id, config) => {\n  const { data } = await axios.delete(\n    `${apiUrl.PLACES}/${id}`,\n    config,\n  );\n\n  return data;\n});\n\nconst updatePlaceReq = cancelableReq(async ({ id, body }, config) => {\n  const { data } = await axios.patch(\n    `${apiUrl.PLACES}/${id}`,\n    body,\n    config,\n  );\n\n  return data;\n});\n\nexport const usePlacesById = (id) => {\n  const { isLoading, data, error } = useQuery(\n    ['userPlaces', id],\n    getPlacesById,\n  );\n  let errMessage = error?.response?.data;\n\n  return [data, isLoading, errMessage];\n};\n\nexport const usePlaceById = (id) => {\n  const { isLoading, data, error } = useQuery(\n    ['userPlace', id],\n    getPlaceById,\n  );\n  let errStatus = error?.response?.status;\n\n  return [data, isLoading, errStatus];\n};\n\nexport const useCreatePlace = () => {\n  const [mutate, { data, error, isSuccess, isLoading }] = useMutation(\n    createPlaceReq,\n  );\n  let errMessage = error?.response?.data;\n\n  return [mutate, data, isLoading, isSuccess, error, errMessage];\n};\n\nexport const useDeletePlace = (userId) => {\n  const [mutate, { data, error, isSuccess, isLoading }] = useMutation(\n    deletePlaceReq,\n    {\n      onMutate: (placeId) => {\n        queryCache.cancelQueries(['userPlaces', userId]);\n        queryCache.setQueryData(['userPlaces', userId], (prev) => {\n          return prev.places.filter((p) => p.id !== placeId);\n        });\n      },\n      onSettled: () => {\n        queryCache.invalidateQueries('userPlaces');\n      },\n    },\n  );\n  let errMessage = error?.response?.data;\n\n  return [mutate, data, isLoading, isSuccess, error, errMessage];\n};\n\nexport const useUpdatePlace = () => {\n  const [mutate, { data, isLoading, isSuccess }] = useMutation(\n    updatePlaceReq,\n    {\n      onSuccess: () => {\n        queryCache.invalidateQueries('userPlace');\n      },\n    },\n  );\n\n  return [mutate, data, isLoading, isSuccess];\n};\n"],"sourceRoot":""}