{"version":3,"sources":["user/scenes/Auth.module.scss","shared/api/hooks/authHook.js","user/scenes/Auth.js","shared/components/UIElements/Card.js","shared/components/UIElements/Card.module.scss","shared/components/FormElements/ImageUpload.js","shared/components/FormElements/ImageUpload.module.scss"],"names":["module","exports","authReq","cancelableReq","config","a","login","body","axios","post","apiUrl","LOGIN","SIGN_UP","data","Auth","addToast","useToastContext","useAuthContext","useState","isLoginMode","setIsLoginMode","useMutation","mutate","error","isSuccess","isLoading","response","useUserAuth","sendAuth","errMessage","useForm","email","value","isValid","password","formState","inputHandler","setFormData","useEffect","user","id","token","message","authSubmitHandler","e","preventDefault","inputs","formData","FormData","append","name","image","Card","className","s","auth","Spinner","asOverlay","authTitle","onSubmit","row","Input","el","type","label","authName","errorText","validators","VALIDATOR_REQUIRE","onInput","ImageUpload","style","width","center","VALIDATOR_EMAIL","VALIDATOR_MINLENGTH","Button","size","disabled","switchBox","inverse","onClick","undefined","prev","children","cx","card","file","setFile","previewUrl","setPreviewUrl","setIsValid","fileInputRef","useRef","fileReader","FileReader","onload","result","readAsDataURL","formControl","ref","accept","onChange","pickedFile","files","target","fileIsValid","length","display","imageUpload","imagePreview","src","alt","current","click"],"mappings":"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","file":"static/js/6.8fd8ca8a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"auth\":\"Auth_auth__P__DK\",\"authTitle\":\"Auth_authTitle__1hINk\",\"authName\":\"Auth_authName__1zIAM\",\"row\":\"Auth_row__9DwFN\",\"switchBox\":\"Auth_switchBox__Vi9QT\"};","import axios from 'axios';\nimport { useMutation } from 'react-query';\nimport { cancelableReq } from '../cancelableReq';\nimport { apiUrl } from '../urls';\n\nconst authReq = cancelableReq(async ({ login, body }, config) => {\n  const { data } = await axios.post(\n    login ? apiUrl.LOGIN : apiUrl.SIGN_UP,\n    body,\n    config,\n  );\n\n  return data;\n});\n\nexport const useUserAuth = () => {\n  const [mutate, { data, error, isSuccess, isLoading }] = useMutation(\n    authReq,\n  );\n  let errMessage = error && error.response?.data;\n\n  return [mutate, data, isLoading, isSuccess, error, errMessage];\n};\n","import React, { useState, useEffect } from 'react';\nimport { useUserAuth } from '../../shared/api/hooks/authHook';\nimport Button from '../../shared/components/FormElements/Button';\nimport ImageUpload from '../../shared/components/FormElements/ImageUpload';\nimport Input from '../../shared/components/FormElements/Input';\nimport Card from '../../shared/components/UIElements/Card';\nimport Spinner from '../../shared/components/UIElements/Spinner';\nimport { useAuthContext } from '../../shared/hooks/authHook';\nimport { useForm } from '../../shared/hooks/formHook';\nimport { useToastContext } from '../../shared/hooks/toastHook';\nimport {\n  VALIDATOR_MINLENGTH,\n  VALIDATOR_EMAIL,\n  VALIDATOR_REQUIRE,\n} from '../../shared/util/validators';\n\nimport s from './Auth.module.scss';\n\nconst Auth = () => {\n  const { addToast } = useToastContext();\n  const { login } = useAuthContext();\n  const [isLoginMode, setIsLoginMode] = useState(true);\n\n  const [\n    sendAuth,\n    data,\n    isLoading,\n    isSuccess,\n    error,\n    errMessage,\n  ] = useUserAuth();\n\n  const [formState, inputHandler, setFormData] = useForm(\n    {\n      email: {\n        value: '',\n        isValid: false,\n      },\n\n      password: {\n        value: '',\n        isValid: false,\n      },\n    },\n    false,\n  );\n  const switchModeHandler = () => {\n    if (!isLoginMode) {\n      setFormData(\n        {\n          ...formState.inputs,\n          name: undefined,\n          image: undefined,\n        },\n\n        formState.inputs.email.isValid &&\n          formState.inputs.password.value,\n      );\n    } else {\n      setFormData(\n        {\n          ...formState.inputs,\n          name: {\n            value: '',\n            isValid: false,\n          },\n          image: {\n            value: null,\n            isValid: false,\n          },\n        },\n\n        false,\n      );\n    }\n    setIsLoginMode((prev) => !prev);\n  };\n\n  useEffect(() => {\n    if (isSuccess) {\n      login(data.user.id, data.user.token);\n      addToast('success', data.message);\n    }\n    if (error) {\n      addToast('danger', errMessage || 'Something went wrong');\n    }\n  }, [isSuccess, error, data]);\n\n  const authSubmitHandler = async (e) => {\n    e.preventDefault();\n\n    if (isLoginMode) {\n      await sendAuth({\n        login: true,\n        body: {\n          email: formState.inputs.email.value,\n          password: formState.inputs.password.value,\n        },\n      });\n    } else {\n      const formData = new FormData();\n\n      formData.append('name', formState.inputs.name.value);\n      formData.append('email', formState.inputs.email.value);\n      formData.append('password', formState.inputs.password.value);\n      formData.append('image', formState.inputs.image.value);\n\n      await sendAuth({\n        body: formData,\n      });\n    }\n  };\n\n  return (\n    <>\n      <Card className={s.auth}>\n        {isLoading && <Spinner asOverlay />}\n\n        <h2 className={s.authTitle}>\n          {isLoginMode ? 'LOGIN' : 'REGISTER'}\n        </h2>\n\n        <hr />\n\n        <form onSubmit={authSubmitHandler}>\n          {!isLoginMode && (\n            <div className={s.row}>\n              <Input\n                id=\"name\"\n                el=\"input\"\n                type=\"text\"\n                label=\"Name\"\n                className={s.authName}\n                errorText=\"Please enter a valid name.\"\n                validators={[VALIDATOR_REQUIRE()]}\n                onInput={inputHandler}\n              />\n\n              <ImageUpload\n                id=\"image\"\n                onInput={inputHandler}\n                style={{ width: '13rem' }}\n                center\n              />\n            </div>\n          )}\n\n          <Input\n            id=\"email\"\n            el=\"input\"\n            type=\"text\"\n            label=\"Email\"\n            errorText=\"Please enter a valid email.\"\n            validators={[VALIDATOR_EMAIL()]}\n            onInput={inputHandler}\n          />\n\n          <Input\n            id=\"password\"\n            el=\"input\"\n            type=\"text\"\n            label=\"Password\"\n            errorText=\"Please enter a valid password (at least 7 characters).\"\n            validators={[VALIDATOR_MINLENGTH(5)]}\n            onInput={inputHandler}\n          />\n\n          <Button\n            size=\"big\"\n            type=\"submit\"\n            disabled={!formState.isValid}\n          >\n            {isLoginMode ? 'LOGIN' : 'REGISTER'}\n          </Button>\n        </form>\n      </Card>\n\n      <Card className={s.switchBox}>\n        <h4>\n          {isLoginMode ? 'Do not Register?' : 'Already register?'}\n        </h4>\n\n        <Button inverse onClick={switchModeHandler}>\n          Switch to {isLoginMode ? 'Register' : 'Login'}\n        </Button>\n      </Card>\n    </>\n  );\n};\n\nexport default Auth;\n","import cx from 'classnames';\nimport React from 'react';\nimport s from './Card.module.scss';\n\nconst Card = ({ center, className, style, children }) => {\n  const el = (\n    <div className={cx(s.card, className)} style={style}>\n      {children}\n    </div>\n  );\n\n  if (center) return <div className={s.center}>{el}</div>;\n\n  return el;\n};\n\nexport default Card;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__3G_du\",\"center\":\"Card_center__2XfKQ\"};","import cx from 'classnames';\nimport React, { useRef, useState, useEffect } from 'react';\nimport Button from './Button';\nimport s from './ImageUpload.module.scss';\n\nconst ImageUpload = ({ id, onInput, center, style }) => {\n  const [file, setFile] = useState();\n  const [previewUrl, setPreviewUrl] = useState();\n  const [isValid, setIsValid] = useState(false);\n\n  const fileInputRef = useRef();\n\n  useEffect(() => {\n    if (!file) {\n      return;\n    }\n    const fileReader = new FileReader();\n    fileReader.onload = () => {\n      setPreviewUrl(fileReader.result);\n    };\n    fileReader.readAsDataURL(file);\n  }, [file]);\n\n  const pickedHandler = (e) => {\n    const files = e.target.files;\n    let pickedFile;\n    let fileIsValid = isValid;\n\n    if (files && files.length === 1) {\n      pickedFile = files[0];\n\n      setFile(pickedFile);\n      setIsValid(true);\n      fileIsValid = true;\n    } else {\n      setIsValid(false);\n      fileIsValid = false;\n    }\n\n    onInput(id, pickedFile, fileIsValid);\n  };\n\n  const pickImageHandler = () => {\n    fileInputRef.current.click();\n  };\n\n  return (\n    <div className={s.formControl} style={style}>\n      <input\n        id={id}\n        ref={fileInputRef}\n        type=\"file\"\n        accept=\".png,.jpg,.jpeg\"\n        onChange={pickedHandler}\n        style={{ display: 'none' }}\n      />\n\n      <div className={cx(s.imageUpload, { [s.center]: center })}>\n        <div className={s.imagePreview}>\n          {previewUrl && <img src={previewUrl} alt=\"Preview\" />}\n          {!previewUrl && <p>Please pick an image.</p>}\n        </div>\n\n        <Button type=\"button\" size=\"small\" onClick={pickImageHandler}>\n          PICK IMAGE\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default ImageUpload;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"ImageUpload_formControl__PWJYi\",\"imageUpload\":\"ImageUpload_imageUpload__37vNi\",\"center\":\"ImageUpload_center__2SuEp\",\"imagePreview\":\"ImageUpload_imagePreview__23K0L\"};"],"sourceRoot":""}